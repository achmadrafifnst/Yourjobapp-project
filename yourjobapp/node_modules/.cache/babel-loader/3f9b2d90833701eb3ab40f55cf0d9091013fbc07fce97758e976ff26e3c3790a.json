{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      valid: true,\n      snackbar: false,\n      colorInfo: '',\n      info: '',\n      userName: '',\n      userNameRules: [v => !!v || 'Username is required', v => v && v.length >= 3 || 'Username must be min 3 characters'],\n      password: '',\n      passwordRules: [v => !!v || 'Password is required', v => v && v.length >= 8 || 'Password must be min 8 characters']\n    };\n  },\n  methods: {\n    validate() {\n      const submitForm = this.$refs.form.validate();\n      if (submitForm) {\n        const data = {\n          'username': this.userName,\n          'sandi': this.password\n        };\n        axios.post('https://rafif.pythonanywhere.com/api/rafif/yourjobapp/login', data).then(response => {\n          if (response.data.status == '1') {\n            console.log(response.data.msg);\n            this.info = response.data.msg;\n            this.colorInfo = '#2FBA39';\n            this.snackbar = true;\n            this.$router.push('/home');\n          }\n        }).catch(error => {\n          var errStatus = error.response.status;\n          if (errStatus == 401) {\n            console.log(error.response.data.msg);\n            this.info = error.response.data.msg;\n            this.colorInfo = '#E02E2E';\n            this.snackbar = true;\n          } else if (errStatus == 400) {\n            console.log(error.response.data.msg);\n            this.info = error.response.data.msg;\n            this.colorInfo = '#E02E2E';\n            this.snackbar = true;\n          }\n        });\n      }\n    },\n    failCloseSnackbar() {\n      this.snackbar = false;\n      this.info = '';\n      this.colorInfo = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","valid","snackbar","colorInfo","info","userName","userNameRules","v","length","password","passwordRules","methods","validate","submitForm","$refs","form","post","then","response","status","console","log","msg","$router","push","catch","error","errStatus","failCloseSnackbar"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\n    <div style=\"height: 100%; background-color: rgb(226, 221, 221);\" class=\"pa-16 align-center justify-center\">\n        <v-row align-center class=\"d-flex align-center justify-center\">\n            <v-col cols=\"12\" md=\"12\" class=\"pa-auto\">\n                <v-card class=\"pa-3 mx-auto\" id=\"card-container\">\n                    <v-form @submit.prevent=\"validate\" ref=\"form\" lazy-validation v-model=\"valid\">\n                        <v-col>\n                            <v-row class=\"d-flex align-center justify-center\">\n                                <h1>Sign In</h1>\n                            </v-row>\n                            <v-row class=\"d-flex align-center justify-center\">\n                                <v-col cols=\"12\" md=\"10\" sm=\"12\">\n                                    <v-text-field \n                                        color=\"primary\" \n                                        v-model=\"userName\" \n                                        :rules=\"userNameRules\" \n                                        outlined\n                                        label=\"Enter your username\" \n                                        style=\"border-radius: 15px;\"\n                                        required \n                                    ></v-text-field>\n                                </v-col>\n                            </v-row>\n                            <v-row class=\"d-flex align-center justify-center\">\n                                <v-col cols=\"12\" md=\"10\" sm=\"12\">\n                                    <v-text-field \n                                        color=\"primary\" \n                                        v-model=\"password\" \n                                        :rules=\"passwordRules\" \n                                        outlined\n                                        label=\"Enter your password\" \n                                        style=\"border-radius: 15px;\"\n                                        required \n                                    ></v-text-field>\n                                </v-col>\n                            </v-row>\n                            <v-row class=\"button-row-container d-flex justify-center align-center\">\n                                <v-col cols=\"12\" md=\"4\">\n                                    <v-btn \n                                        elevation=\"0\" \n                                        color=\"rgb(49, 43, 43)\" \n                                        tile \n                                        @click=\"validate\" \n                                        class=\"pa-6\"\n                                        :style=\"{\n                                                'color':'#ecf0f1',\n                                                'border-radius':'15px'\n                                                }\" \n                                    >\n                                        Login\n                                    </v-btn>\n                                </v-col>\n                            </v-row>\n                        </v-col>\n                    </v-form>\n                </v-card>\n            </v-col>\n        </v-row>\n        <v-snackbar \n            v-model=\"snackbar\" \n        >\n            {{ this.info }}\n            <template v-slot:action=\"{attrs}\">\n                <v-btn\n                    :color=\"colorInfo\"\n                    text\n                    v-bind=\"attrs\"\n                    @click=\"failCloseSnackbar\"\n                >\n                    Close\n                </v-btn>\n            </template>\n        </v-snackbar>\n    </div>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default{\n    name:'LoginView',\n    data(){\n        return{\n            valid:true,\n            snackbar:false,\n            colorInfo:'',\n            info:'',\n            userName:'',\n            userNameRules: [\n                v => !!v || 'Username is required',\n                v => (v && v.length >= 3) || 'Username must be min 3 characters',\n            ],\n            password:'',\n            passwordRules: [\n                v => !!v || 'Password is required',\n                v => (v && v.length >= 8) || 'Password must be min 8 characters',\n            ],\n        }\n    },\n    methods:{\n        validate(){\n            const submitForm = this.$refs.form.validate()\n            if (submitForm){\n                \n                const data = {\n                    'username':this.userName,\n                    'sandi': this.password\n                }\n                axios.post('https://rafif.pythonanywhere.com/api/rafif/yourjobapp/login',data)\n                .then(\n                    response => {\n                        if( response.data.status == '1'){\n                            console.log(response.data.msg)\n                            this.info = response.data.msg\n                            this.colorInfo = '#2FBA39'\n                            this.snackbar = true\n                            this.$router.push('/home');\n                            \n                        }\n                    }\n                ).catch(\n                    error => {\n                        var errStatus = error.response.status\n                        if (errStatus == 401){\n                            console.log(error.response.data.msg)\n                            this.info = error.response.data.msg\n                            this.colorInfo = '#E02E2E'\n                            this.snackbar = true\n                        }\n                        else if(errStatus == 400){\n                            console.log(error.response.data.msg)\n                            this.info = error.response.data.msg\n                            this.colorInfo = '#E02E2E'\n                            this.snackbar = true\n                        }\n                    }\n                )\n            }\n        },\n        failCloseSnackbar(){\n            this.snackbar = false\n            this.info = ''\n            this.colorInfo = ''\n        }\n    }\n}\n\n</script>\n\n<style scoped>\nh1{\n    font-size: 300%; \n    color:rgb(87, 75, 75); \n    text-shadow:0px 3px 3px rgb(48, 43, 43);\n}\n.button-row-container{\n    padding-left: 8%;\n}\n#card-container{\n    border-radius: 15px; \n    max-width: 40vw; \n    background-color: rgba(117, 78, 26 ,0.3);\n}\n@media screen and (max-width:600px) {\n    #card-container{\n        max-width: 70vw;\n    }\n    .button-row-container{\n        padding-left: 0%;\n    }\n    h1{\n        font-size:200%;\n    }\n}\n</style>"],"mappings":";AA4EA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,SAAA;MACAC,IAAA;MACAC,QAAA;MACAC,aAAA,GACAC,CAAA,MAAAA,CAAA,4BACAA,CAAA,IAAAA,CAAA,IAAAA,CAAA,CAAAC,MAAA,6CACA;MACAC,QAAA;MACAC,aAAA,GACAH,CAAA,MAAAA,CAAA,4BACAA,CAAA,IAAAA,CAAA,IAAAA,CAAA,CAAAC,MAAA;IAEA;EACA;EACAG,OAAA;IACAC,SAAA;MACA,MAAAC,UAAA,QAAAC,KAAA,CAAAC,IAAA,CAAAH,QAAA;MACA,IAAAC,UAAA;QAEA,MAAAb,IAAA;UACA,iBAAAK,QAAA;UACA,cAAAI;QACA;QACAX,KAAA,CAAAkB,IAAA,gEAAAhB,IAAA,EACAiB,IAAA,CACAC,QAAA;UACA,IAAAA,QAAA,CAAAlB,IAAA,CAAAmB,MAAA;YACAC,OAAA,CAAAC,GAAA,CAAAH,QAAA,CAAAlB,IAAA,CAAAsB,GAAA;YACA,KAAAlB,IAAA,GAAAc,QAAA,CAAAlB,IAAA,CAAAsB,GAAA;YACA,KAAAnB,SAAA;YACA,KAAAD,QAAA;YACA,KAAAqB,OAAA,CAAAC,IAAA;UAEA;QACA,CACA,EAAAC,KAAA,CACAC,KAAA;UACA,IAAAC,SAAA,GAAAD,KAAA,CAAAR,QAAA,CAAAC,MAAA;UACA,IAAAQ,SAAA;YACAP,OAAA,CAAAC,GAAA,CAAAK,KAAA,CAAAR,QAAA,CAAAlB,IAAA,CAAAsB,GAAA;YACA,KAAAlB,IAAA,GAAAsB,KAAA,CAAAR,QAAA,CAAAlB,IAAA,CAAAsB,GAAA;YACA,KAAAnB,SAAA;YACA,KAAAD,QAAA;UACA,OACA,IAAAyB,SAAA;YACAP,OAAA,CAAAC,GAAA,CAAAK,KAAA,CAAAR,QAAA,CAAAlB,IAAA,CAAAsB,GAAA;YACA,KAAAlB,IAAA,GAAAsB,KAAA,CAAAR,QAAA,CAAAlB,IAAA,CAAAsB,GAAA;YACA,KAAAnB,SAAA;YACA,KAAAD,QAAA;UACA;QACA,CACA;MACA;IACA;IACA0B,kBAAA;MACA,KAAA1B,QAAA;MACA,KAAAE,IAAA;MACA,KAAAD,SAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}