{"ast":null,"code":"import AuthService from '../services/auth.services';\nconst user = JSON.parse(localStorage.getItem('user')) || null;\nconst initialState = user ? {\n  status: {\n    loggedIn: true\n  },\n  user\n} : {\n  status: {\n    loggedIn: false\n  },\n  user: null\n};\nexport default {\n  namespace: true,\n  state: initialState,\n  actions: {\n    login({\n      commit\n    }, user) {\n      return AuthService.login(user).then(user => {\n        commit('loginSuccess', user);\n        return Promise.resolve(user);\n      }, error => {\n        commit('loginFailure');\n        return Promise.reject(error);\n      });\n    },\n    logout({\n      commit\n    }) {\n      AuthService.logout();\n      commit('logout');\n    }\n  },\n  mutations: {\n    loginSuccess(state, user) {\n      state.status.loggedIn = true;\n      state.user = user;\n    },\n    loginFailure(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    },\n    logout(state) {\n      state.status.loggedIn = false;\n      state.u = false;\n    }\n  }\n};","map":{"version":3,"names":["AuthService","user","JSON","parse","localStorage","getItem","initialState","status","loggedIn","namespace","state","actions","login","commit","then","Promise","resolve","error","reject","logout","mutations","loginSuccess","loginFailure","u"],"sources":["/home/rafif/yourjobapp/src/store/auth.module.js"],"sourcesContent":["import AuthService from '../services/auth.services'\n\nconst user = JSON.parse(localStorage.getItem('user')) || null;\n\nconst initialState = user\n    ? { status: { loggedIn: true},user }\n    : { status: { loggedIn: false},user:null };\n\nexport default{\n    namespace:true,\n    state:initialState,\n    actions:{\n        login({commit},user){\n            return AuthService.login(user).then(\n                user => {\n                    commit('loginSuccess', user);\n                    return Promise.resolve(user);\n                },\n                error => {\n                    commit('loginFailure');\n                    return Promise.reject(error);\n                }\n            );\n        },\n        logout({commit}){\n            AuthService.logout();\n            commit('logout');\n        }\n    },\n    mutations:{\n        loginSuccess(state,user){\n            state.status.loggedIn = true;\n            state.user = user;\n        }, \n        loginFailure(state){\n            state.status.loggedIn = false;\n            state.user = null;\n        },\n        logout(state){\n            state.status.loggedIn = false;\n            state.u = false;\n        }\n    }\n};"],"mappings":"AAAA,OAAOA,WAAW,MAAM,2BAA2B;AAEnD,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI;AAE7D,MAAMC,YAAY,GAAGL,IAAI,GACnB;EAAEM,MAAM,EAAE;IAAEC,QAAQ,EAAE;EAAI,CAAC;EAACP;AAAK,CAAC,GAClC;EAAEM,MAAM,EAAE;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAACP,IAAI,EAAC;AAAK,CAAC;AAE9C,eAAc;EACVQ,SAAS,EAAC,IAAI;EACdC,KAAK,EAACJ,YAAY;EAClBK,OAAO,EAAC;IACJC,KAAKA,CAAC;MAACC;IAAM,CAAC,EAACZ,IAAI,EAAC;MAChB,OAAOD,WAAW,CAACY,KAAK,CAACX,IAAI,CAAC,CAACa,IAAI,CAC/Bb,IAAI,IAAI;QACJY,MAAM,CAAC,cAAc,EAAEZ,IAAI,CAAC;QAC5B,OAAOc,OAAO,CAACC,OAAO,CAACf,IAAI,CAAC;MAChC,CAAC,EACDgB,KAAK,IAAI;QACLJ,MAAM,CAAC,cAAc,CAAC;QACtB,OAAOE,OAAO,CAACG,MAAM,CAACD,KAAK,CAAC;MAChC,CACJ,CAAC;IACL,CAAC;IACDE,MAAMA,CAAC;MAACN;IAAM,CAAC,EAAC;MACZb,WAAW,CAACmB,MAAM,CAAC,CAAC;MACpBN,MAAM,CAAC,QAAQ,CAAC;IACpB;EACJ,CAAC;EACDO,SAAS,EAAC;IACNC,YAAYA,CAACX,KAAK,EAACT,IAAI,EAAC;MACpBS,KAAK,CAACH,MAAM,CAACC,QAAQ,GAAG,IAAI;MAC5BE,KAAK,CAACT,IAAI,GAAGA,IAAI;IACrB,CAAC;IACDqB,YAAYA,CAACZ,KAAK,EAAC;MACfA,KAAK,CAACH,MAAM,CAACC,QAAQ,GAAG,KAAK;MAC7BE,KAAK,CAACT,IAAI,GAAG,IAAI;IACrB,CAAC;IACDkB,MAAMA,CAACT,KAAK,EAAC;MACTA,KAAK,CAACH,MAAM,CAACC,QAAQ,GAAG,KAAK;MAC7BE,KAAK,CAACa,CAAC,GAAG,KAAK;IACnB;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}