{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import axios from 'axios';\n// import useVuelidate from '@vuelidate/core';\n// import {required} from '@vuelidate/validators';\n\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      valid: true,\n      snackbar: false,\n      colorInfo: '',\n      info: '',\n      userName: '',\n      userNameRules: [v => !!v || 'Username is required', v => v && v.length >= 3 || 'Username must be min 3 characters'],\n      password: '',\n      passwordRules: [v => !!v || 'Password is required', v => v && v.length >= 8 || 'Password must be min 8 characters']\n    };\n  },\n  // setup:() => ({v$:useVuelidate()}),\n  created() {\n    if (this.loggedIn) {\n      this.$router.push('/home');\n    }\n  },\n  methods: {\n    validate() {\n      // const result = await this.v$.$validate();\n      if (this.userName != '' && this.password != '') {\n        // const {userName,password} = this\n        const user = {\n          'username': this.userName,\n          'sandi': this.password\n        };\n        this.handleLogin(user);\n      } else {\n        this.info = 'Login, Error';\n        console.log(this.info);\n      }\n\n      // const submitForm = this.$refs.form.validate()\n      // if (submitForm){\n\n      //     const data = {\n      //         'username':this.userName,\n      //         'sandi': this.password\n      //     }\n      //     axios.post('https://rafif.pythonanywhere.com/api/rafif/yourjobapp/login',data)\n      //     .then(\n      //         response => {\n      //             if( response.data.status == '1'){\n      //                 console.log(response.data.msg)\n      //                 this.info = response.data.msg\n      //                 this.colorInfo = '#2FBA39'\n      //                 this.snackbar = true\n      //                 this.$router.push('/home');\n\n      //             }\n      //         }\n      //     ).catch(\n      //         error => {\n      //             var errStatus = error.response.status\n      //             if (errStatus == 401){\n      //                 console.log(error.response.data.msg)\n      //                 this.info = error.response.data.msg\n      //                 this.colorInfo = '#E02E2E'\n      //                 this.snackbar = true\n      //             }\n      //             else if(errStatus == 400){\n      //                 console.log(error.response.data.msg)\n      //                 this.info = error.response.data.msg\n      //                 this.colorInfo = '#E02E2E'\n      //                 this.snackbar = true\n      //             }\n      //         }\n      //     )\n      // }\n    },\n    handleLogin(user) {\n      this.$store.dispatch(\"auth/login\", user).then(response => {\n        if (response.access_token) {\n          this.$router.push(\"/home\");\n        }\n      }, error => {\n        console.log(error.toString());\n      });\n    },\n    failCloseSnackbar() {\n      this.snackbar = false;\n      this.info = '';\n      this.colorInfo = '';\n    }\n  },\n  // validations() {\n  //     return {\n  //     userName: { required },\n  //     password: { required }\n  //     }\n  // },\n  computed: {\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    }\n  }\n};","map":{"version":3,"names":["name","data","valid","snackbar","colorInfo","info","userName","userNameRules","v","length","password","passwordRules","created","loggedIn","$router","push","methods","validate","user","handleLogin","console","log","$store","dispatch","then","response","access_token","error","toString","failCloseSnackbar","computed","state","auth","status"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\n    <div style=\"height: 100%; background-color: rgb(226, 221, 221);\" class=\"pa-16 align-center justify-center\">\n        <v-row align-center class=\"d-flex align-center justify-center\">\n            <v-col cols=\"12\" md=\"12\" class=\"pa-auto\">\n                <v-card class=\"pa-3 mx-auto\" id=\"card-container\">\n                    <v-form @submit.prevent=\"validate\" ref=\"form\" lazy-validation v-model=\"valid\">\n                        <v-col>\n                            <v-row class=\"d-flex align-center justify-center mb-10\">\n                                <h1>Sign In</h1>\n                            </v-row>\n                            <v-row class=\"d-flex align-center justify-center mt-10\">\n                                <v-col cols=\"12\" md=\"10\" sm=\"12\">\n                                    <v-text-field \n                                        color=\"primary\" \n                                        v-model=\"userName\" \n                                        :rules=\"userNameRules\" \n                                        outlined\n                                        label=\"Enter your username\" \n                                        style=\"border-radius: 15px;\"\n                                        required \n                                    ></v-text-field>\n                                </v-col>\n                            </v-row>\n                            <v-row class=\"d-flex align-center justify-center\">\n                                <v-col cols=\"12\" md=\"10\" sm=\"12\">\n                                    <v-text-field \n                                        color=\"primary\" \n                                        v-model=\"password\" \n                                        :rules=\"passwordRules\" \n                                        outlined\n                                        label=\"Enter your password\" \n                                        style=\"border-radius: 15px;\"\n                                        required \n                                    ></v-text-field>\n                                </v-col>\n                            </v-row>\n                            <v-row class=\"button-row-container d-flex justify-center align-center\">\n                                <v-col cols=\"12\" md=\"4\">\n                                    <v-btn \n                                        elevation=\"0\" \n                                        color=\"rgb(49, 43, 43)\" \n                                        tile \n                                        type=\"submit\" \n                                        class=\"pa-6\"\n                                        :style=\"{\n                                                'color':'#ecf0f1',\n                                                'border-radius':'15px'\n                                                }\" \n                                    >\n                                        Login\n                                    </v-btn>\n                                </v-col>\n                            </v-row>\n                        </v-col>\n                    </v-form>\n                </v-card>\n            </v-col>\n        </v-row>\n        <v-snackbar \n            v-model=\"snackbar\" \n        >\n            {{ this.info }}\n            <template v-slot:action=\"{attrs}\">\n                <v-btn\n                    :color=\"colorInfo\"\n                    text\n                    v-bind=\"attrs\"\n                    @click=\"failCloseSnackbar\"\n                >\n                    Close\n                </v-btn>\n            </template>\n        </v-snackbar>\n    </div>\n</template>\n<script>\n// import axios from 'axios';\n// import useVuelidate from '@vuelidate/core';\n// import {required} from '@vuelidate/validators';\n\nexport default{\n    name:'LoginView',\n    data(){\n        return{\n            valid:true,\n            snackbar:false,\n            colorInfo:'',\n            info:'',\n            userName:'',\n            userNameRules: [\n                v => !!v || 'Username is required',\n                v => (v && v.length >= 3) || 'Username must be min 3 characters',\n            ],\n            password:'',\n            passwordRules: [\n                v => !!v || 'Password is required',\n                v => (v && v.length >= 8) || 'Password must be min 8 characters',\n            ],\n        }\n    },\n    // setup:() => ({v$:useVuelidate()}),\n    created() {\n        if (this.loggedIn) {\n            this.$router.push('/home');\n        }\n    },\n    methods:{\n        validate(){\n            // const result = await this.v$.$validate();\n            if( this.userName != '' && this.password != ''){\n                // const {userName,password} = this\n                const user = {'username':this.userName,'sandi':this.password}\n                this.handleLogin(user)\n            }else{\n                this.info = 'Login, Error'\n                console.log(this.info)\n            }\n\n            // const submitForm = this.$refs.form.validate()\n            // if (submitForm){\n                \n            //     const data = {\n            //         'username':this.userName,\n            //         'sandi': this.password\n            //     }\n            //     axios.post('https://rafif.pythonanywhere.com/api/rafif/yourjobapp/login',data)\n            //     .then(\n            //         response => {\n            //             if( response.data.status == '1'){\n            //                 console.log(response.data.msg)\n            //                 this.info = response.data.msg\n            //                 this.colorInfo = '#2FBA39'\n            //                 this.snackbar = true\n            //                 this.$router.push('/home');\n                            \n            //             }\n            //         }\n            //     ).catch(\n            //         error => {\n            //             var errStatus = error.response.status\n            //             if (errStatus == 401){\n            //                 console.log(error.response.data.msg)\n            //                 this.info = error.response.data.msg\n            //                 this.colorInfo = '#E02E2E'\n            //                 this.snackbar = true\n            //             }\n            //             else if(errStatus == 400){\n            //                 console.log(error.response.data.msg)\n            //                 this.info = error.response.data.msg\n            //                 this.colorInfo = '#E02E2E'\n            //                 this.snackbar = true\n            //             }\n            //         }\n            //     )\n            // }\n        },\n        handleLogin(user){\n            this.$store.dispatch(\"auth/login\",user).then(\n                response => {\n                    \n                    if(response.access_token){\n                        this.$router.push(\"/home\");\n                    }\n                },\n                error => {\n                    console.log(error.toString())\n                }\n            )\n        },\n        failCloseSnackbar(){\n            this.snackbar = false\n            this.info = ''\n            this.colorInfo = ''\n        }\n    },\n    // validations() {\n    //     return {\n    //     userName: { required },\n    //     password: { required }\n    //     }\n    // },\n    computed: {\n        loggedIn() {\n            return this.$store.state.auth.status.loggedIn;\n        },\n    }\n}\n\n</script>\n\n<style scoped>\nh1{\n    font-size: 300%; \n    color:rgb(87, 75, 75); \n    text-shadow:0px 3px 3px rgb(48, 43, 43);\n}\n.button-row-container{\n    padding-left: 0%;\n}\n#card-container{\n    border-radius: 15px; \n    max-width: 30vw; \n    background-color: rgba(117, 78, 26 ,0.3);\n}\n@media screen and (max-width:600px) {\n    #card-container{\n        max-width: 70vw;\n    }\n    .button-row-container{\n        padding-left: 0%;\n    }\n    h1{\n        font-size:200%;\n    }\n}\n</style>"],"mappings":";AA4EA;AACA;AACA;;AAEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,SAAA;MACAC,IAAA;MACAC,QAAA;MACAC,aAAA,GACAC,CAAA,MAAAA,CAAA,4BACAA,CAAA,IAAAA,CAAA,IAAAA,CAAA,CAAAC,MAAA,6CACA;MACAC,QAAA;MACAC,aAAA,GACAH,CAAA,MAAAA,CAAA,4BACAA,CAAA,IAAAA,CAAA,IAAAA,CAAA,CAAAC,MAAA;IAEA;EACA;EACA;EACAG,QAAA;IACA,SAAAC,QAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,SAAA;MACA;MACA,SAAAX,QAAA,eAAAI,QAAA;QACA;QACA,MAAAQ,IAAA;UAAA,iBAAAZ,QAAA;UAAA,cAAAI;QAAA;QACA,KAAAS,WAAA,CAAAD,IAAA;MACA;QACA,KAAAb,IAAA;QACAe,OAAA,CAAAC,GAAA,MAAAhB,IAAA;MACA;;MAEA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAc,YAAAD,IAAA;MACA,KAAAI,MAAA,CAAAC,QAAA,eAAAL,IAAA,EAAAM,IAAA,CACAC,QAAA;QAEA,IAAAA,QAAA,CAAAC,YAAA;UACA,KAAAZ,OAAA,CAAAC,IAAA;QACA;MACA,GACAY,KAAA;QACAP,OAAA,CAAAC,GAAA,CAAAM,KAAA,CAAAC,QAAA;MACA,CACA;IACA;IACAC,kBAAA;MACA,KAAA1B,QAAA;MACA,KAAAE,IAAA;MACA,KAAAD,SAAA;IACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA0B,QAAA;IACAjB,SAAA;MACA,YAAAS,MAAA,CAAAS,KAAA,CAAAC,IAAA,CAAAC,MAAA,CAAApB,QAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}